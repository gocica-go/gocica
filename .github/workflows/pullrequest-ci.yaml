name: CI

on:
  push:
    branches:
      - "main"
  pull_request:

env:
  APP_NAME: gocica

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    env:
      GOCACHE: "/tmp/go/cache"
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - uses: actions/cache@v4
        with:
          path: /tmp/go/cache
          key: ${{ runner.os }}-go-build-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-go-build-${{ github.ref }}-
            ${{ runner.os }}-go-build-
      - run: go build -tags=dev -o ${{ env.APP_NAME }} .
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
          path: ./${{ env.APP_NAME }}
  std_lib_build:
    name: Build standard library
    needs: [build]
    runs-on: ubuntu-latest
    env:
      GOMODCACHE: /tmp/gocache/mod
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: false
      - uses: actions/cache@v4 # Go mod cache(not covered by Go setup cache)
        with:
          path: ${{ env.GOMODCACHE }}
          key: go-mod-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            go-mod-${{ runner.os }}-${{ github.ref }}-
            go-mod-${{ runner.os }}-
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
      - name: Fix permissions # ref: https://github.com/actions/download-artifact?tab=readme-ov-file#permission-loss
        run: chmod +x ${{ env.APP_NAME }}
      - name: Expose GitHub Actions runtime environment variables
        uses: crazy-max/ghaction-github-runtime@v3
      - name: Build standard library
        run: time go install std
        env:
          GOCACHEPROG: "./${{ env.APP_NAME }}"
  traq_build:
    name: Build traQ
    needs: [build]
    runs-on: ubuntu-latest
    env:
      GOMODCACHE: /tmp/gocache/mod
    steps:
      - uses: actions/checkout@v4
        with:
          repository: traPtitech/traQ
          ref: v3.22.0
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
          cache: false
      - uses: actions/cache@v4 # Go mod cache(not covered by Go setup cache)
        with:
          path: ${{ env.GOMODCACHE }}
          key: go-mod-${{ runner.os }}-${{ github.ref }}-${{ github.sha }}
          restore-keys: |
            go-mod-${{ runner.os }}-${{ github.ref }}-
            go-mod-${{ runner.os }}-
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.APP_NAME }}
      - name: Fix permissions # ref: https://github.com/actions/download-artifact?tab=readme-ov-file#permission-loss
        run: chmod +x ./${{ env.APP_NAME }}
      - name: Expose GitHub Actions runtime environment variables
        uses: crazy-max/ghaction-github-runtime@v3
      - run: go mod download
      - run: mkdir ./tmp
      - run: time go build -o traQ -ldflags "-s -w -X main.version=Dev -X main.revision=Local"
        env:
          CGO_ENABLED: 0
          GOCACHEPROG: "./${{ env.APP_NAME }} --dev.cpu-prof=./tmp/cpu.prof --dev.fg-prof=./tmp/fgprof.prof --dev.mem-prof=./tmp/mem.prof --dev.metrics=./tmp/metrics.csv"
      - name: Upload assets
        uses: actions/upload-artifact@v4
        with:
          name: metrics
          path: ./tmp
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true
      - run: go test ./... -v -coverprofile=./coverage.txt -race -vet=off
      - name: Upload coverage data
        uses: codecov/codecov-action@v5.4.3
        with:
          files: ./coverage.txt
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
      - uses: actions/upload-artifact@v4
        with:
          name: coverage.txt
          path: coverage.txt
  lint:
    name: Lint
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - name: golangci-lint
        uses: reviewdog/action-golangci-lint@v2.8
        with:
          go_version_file: go.mod
          reporter: github-pr-review
          github_token: ${{ secrets.GITHUB_TOKEN }}
          fail_level: error
