name: Benchmark

on:
  workflow_dispatch:
    inputs:
      gocica-version:
        description: gocica-go/gocica's version
        required: true

permissions:
  actions: write

env:
  TARGET_REPO: tailscale/tailscale
  TARGET_REF: v1.84.0
  BUILD_CMD: go build ./cmd/...

jobs:
  no_cache_gocica_github:
    name: GoCICa GitHub(No Cache)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      max-parallel: 1
    steps:
      - name: Clear cache
        uses: actions/github-script@v7
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: "gocica-cache-"
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("About to clear setup-go cache")
            const setupGoCaches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: "setup-go-"
            })
            for (const cache of setupGoCaches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
      - uses: actions/checkout@v5
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: ${{ env.TARGET_REF }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - uses: gocica-go/gocica-action@v0.1.0-alpha10
        with:
          version: ${{ github.event.inputs.gocica-version }}
      - run: time ${{ env.BUILD_CMD }}
        env:
          CGO_ENABLED: 0
  cache_gocica_github:
    name: GoCICa GitHub(Cache)
    runs-on: ubuntu-latest
    needs: [no_cache_gocica_github]
    strategy:
      matrix:
        id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v5
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: ${{ env.TARGET_REF }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - uses: gocica-go/gocica-action@v0.1.0-alpha10
        with:
          version: ${{ github.event.inputs.gocica-version }}
      - run: time ${{ env.BUILD_CMD }}
        env:
          CGO_ENABLED: 0
  no_cache_default:
    name: action/cache(No Cache)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        id: [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      max-parallel: 1
    needs: [cache_gocica_github]
    steps:
      - uses: actions/checkout@v5
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: ${{ env.TARGET_REF }}
          fetch-depth: 0
      - name: Clear cache
        uses: actions/github-script@v7
        with:
          script: |
            console.log("About to clear")
            const caches = await github.rest.actions.getActionsCacheList({
              owner: context.repo.owner,
              repo: context.repo.repo,
              key: "setup-go-"
            })
            for (const cache of caches.data.actions_caches) {
              console.log(cache)
              github.rest.actions.deleteActionsCacheById({
                owner: context.repo.owner,
                repo: context.repo.repo,
                cache_id: cache.id,
              })
            }
            console.log("Clear completed")
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - run: time ${{ env.BUILD_CMD }}
        env:
          CGO_ENABLED: 0
  cache_default:
    name: action/cache(Cache)
    runs-on: ubuntu-latest
    needs: [no_cache_default]
    strategy:
      matrix:
        id: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
      max-parallel: 1
    steps:
      - uses: actions/checkout@v5
        with:
          repository: ${{ env.TARGET_REPO }}
          ref: ${{ env.TARGET_REF }}
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: 1.24.1
      - run: time ${{ env.BUILD_CMD }}
        env:
          CGO_ENABLED: 0
